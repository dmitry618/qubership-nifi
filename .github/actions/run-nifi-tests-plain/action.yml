---
name: 'Run NiFi in plain mode and execute autotests'
description: 'Runs NiFi and Consul containers and executes autotests'
runs:
  using: "composite"
  steps:
    - name: Prepare libs
      shell: bash
      run: |
        echo "Preparing libs..."
        chmod +x .github/workflows/sh/*.sh
        . .github/workflows/sh/nifi-lib.sh
        echo "Generate temporary sensitive key"
        export NIFI_SENSITIVE_KEY=$(generate_random_hex_password 14)
        echo "$NIFI_SENSITIVE_KEY" > ./nifi-sens-key.tmp
        mkdir -p ./test-results/plain/
    - name: Run local nifi
      shell: bash
      run: |
        export NIFI_SENSITIVE_KEY=$(cat ./nifi-sens-key.tmp)
        echo "Starting containers (nifi, consul)..."
        docker compose -f .github/docker/plain/docker-compose.yaml up -d
    - name: Display running containers
      shell: bash
      run: docker ps
    - name: Wait for nifi container to start
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        echo "Sleep for 15 seconds:"
        sleep 15
        echo "Wait for nifi container to start:"
        wait_success="1"
        #TODO: add timeout parameter to action
        wait_for_nifi "false" "60" "127.0.0.1" "8080" || wait_success="0"
        if [ "$wait_success" == '0' ]; then
          echo "Wait failed, nifi not available. Last 500 lines of logs for container:"
          docker logs -n 500 local-nifi-plain > ./nifi_log_tmp.lst
          cat ./nifi_log_tmp.lst
          echo "Wait failed, nifi not available" > ./test-results/plain/failed_nifi_wait.lst
          mv ./nifi_log_tmp.lst ./test-results/plain/nifi_log_after_wait.log
        fi
    - name: Configure log levels in Consul
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        targetPkg='org.qubership.test.pkg2'
        targetLevel='DEBUG'
        configure_log_level "$targetPkg" "$targetLevel" || \
           echo "Consul config failed" > ./test-results/plain/failed_consul_config.lst
        echo "Waiting 20 seconds..."
        sleep 20
        echo "Copying logback.xml..."
        docker cp local-nifi-plain:/opt/nifi/nifi-current/conf/logback.xml ./test-results/plain/logback.xml
        res="0"
        grep "$targetPkg" ./test-results/plain/logback.xml | grep 'logger' | grep "$targetLevel" || res="1"
        if [ "$res" == "0" ]; then
          echo "Logback configuration successfully applied"
        else
          echo "Logback configuration failed to apply"
          echo "NiFi logger config update failed" > ./test-results/plain/failed_log_config.lst
        fi
    - name: Run nifi API tests
      shell: bash
      continue-on-error: true
      run: |
        gitDir="$(pwd)"
        collectionsDir="${gitDir}/.github/workflows/collections"
        echo "Running newman using collections from $collectionsDir"
        echo "Run basic NiFi API tests..."
        docker run --net=host --rm -v "$collectionsDir:/etc/newman" \
          postman/newman:alpine run "NiFi Basic API Tests.postman_collection.json" \
          --environment="NiFi_AT.json.postman_environment" -r cli,junit || \
          echo "Basic AT failed to run" > ./test-results/plain/failed_basic_at.lst
    - name: Cleanup after tests
      shell: bash
      continue-on-error: true
      run: |
        export NIFI_SENSITIVE_KEY=$(cat ./nifi-sens-key.tmp)
        echo "Stopping and removing containers"
        docker compose -f .github/docker/plain/docker-compose.yaml down