---
name: Docker build and test

on:
  push:
    paths:
      - '.github/workflows/docker-build-and-test.yml'
      - 'qubership-bundle/**'
      - 'qubership-consul/**'
      - 'qubership-nifi-bulk-redis-service/**'
      - 'qubership-nifi-bundle-common/**'
      - 'qubership-nifi-common/**'
      - 'qubership-nifi-db-bundle/**'
      - 'qubership-nifi-lookup-services/**'
      - 'qubership-services/**'
      - 'pom.xml'
      - 'Dockerfile'
      - 'nifi-config/**'
      - 'nifi-scripts/**'
      - 'qubership-nifi-deps/**'
      - 'scripts/**'
  pull_request:
    paths:
      - '.github/workflows/docker-build-and-test.yml'
      - 'qubership-bundle/**'
      - 'qubership-consul/**'
      - 'qubership-nifi-bulk-redis-service/**'
      - 'qubership-nifi-bundle-common/**'
      - 'qubership-nifi-common/**'
      - 'qubership-nifi-db-bundle/**'
      - 'qubership-nifi-lookup-services/**'
      - 'qubership-services/**'
      - 'pom.xml'
      - 'Dockerfile'
      - 'nifi-config/**'
      - 'nifi-scripts/**'
      - 'qubership-nifi-deps/**'
      - 'scripts/**'
  workflow_dispatch:
    inputs:
      java-version:
        required: false
        type: string
        default: "21"
        description: 'Java version (e.g., 21)'
jobs:
  docker-build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Input parameters
        shell: bash
        run: |
          echo "Java version: ${{ github.event.inputs.java-version || '21' }}" >> $GITHUB_STEP_SUMMARY
          mkdir -p ./test-results/
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version || '21' }}
          distribution: 'temurin'
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.gpg-private-key }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Run local maven build
        run: mvn --batch-mode package
        env:
          MAVEN_USERNAME: ${{ secrets.maven-username }}
          MAVEN_PASSWORD: ${{ secrets.maven-token }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.gpg-passphrase }}
          SONAR_TOKEN: ${{ secrets.sonar-token }}
      - name: Run local docker build
        run: docker build -t local-nifi:test .
      - name: Run tests for nifi in plain (non-TLS mode)
        uses: ./.github/actions/run-nifi-tests-plain
      - name: Collect results for plain (non-TLS mode)
        shell: bash
        run: |
          echo "Collecting collection results for plain mode..."
          find .github/workflows/collections -name \*.xml -exec cp {} ./test-results/plain/ \;
      - name: Run tests for nifi in TLS mode
        shell: bash
        run: |
          echo "TBD: tests for NiFi in TLS mode..."
      - name: Run tests for nifi in TLS and OIDC mode
        shell: bash
        run: |
          echo "TBD: tests for NiFi in TLS+OIDC mode..."
      - name: Verify test results
        shell: bash
        run: |
          echo "Checking test results for failures..."
          failed_cnt=$(find ./test-results -name "failed_*.lst" | wc -l)
          echo "Found failed steps = $failed_cnt"
          if [ "$failed_cnt" == "0" ]; then 
            echo "All tests were successful!"
          else
            echo "Some tests ($failed_cnt) failed. Marking as failure."
            exit 1;
          fi
      - name: Upload test results
        if: failure() || cancelled()
        uses: actions/upload-artifact@v4
        with:
          name: nifi-autotests-logs
          path: |
            ./test-results
          retention-days: 2
      
